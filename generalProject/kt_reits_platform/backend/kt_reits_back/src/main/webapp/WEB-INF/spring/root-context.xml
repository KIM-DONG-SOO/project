<?xml version="1.0" encoding="UTF-8"?>

<!--
DB 연결, MyBatis 설정 등 **전역 빈(Bean)**을 관리.
servlet-context.xml은 웹 요청 처리만, root-context는 비즈니스 레이어 담당 -->

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- DB 설정 파일 로드 -->
    <context:property-placeholder location="classpath:db.properties" />
    
    <!-- Service, DAO 스캔 -->
    <context:component-scan base-package="com.example.service" />
    <context:component-scan base-package="com.example.dao" />

    <!-- Oracle DataSource 설정 -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${db.driver}" />
        <property name="url" value="${db.url}" />
        <property name="username" value="${db.username}" />
        <property name="password" value="${db.password}" />
    </bean>

    <!-- MyBatis SqlSessionFactory 설정 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- Mapper XML 위치 -->
        <property name="mapperLocations" value="classpath:mappers/*.xml" />
        <!-- DTO 패키지 별칭 자동 생성 (예: UserDTO → userDTO) -->
        <property name="typeAliasesPackage" value="com.example.dto" />
    </bean>

    <!-- MyBatis Mapper 인터페이스 스캔 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.example.dao" />
    </bean>

    <!-- 트랜잭션 매니저 (회원가입, 계약 등 다중 쿼리 롤백 처리용) -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    
    <!-- @Transactional 어노테이션 활성화 -->
    <tx:annotation-driven transaction-manager="transactionManager" />

</beans>